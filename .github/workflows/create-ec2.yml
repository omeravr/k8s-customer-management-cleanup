name: EC2 Deployment with Remote State in S3

on:
  workflow_dispatch:  # Manual trigger

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Setup Node.js (Install Node.js)
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Create S3 bucket for remote state
        run: |
          aws s3api create-bucket --bucket terraform-remote-state-ec2-test --region eu-central-1 --create-bucket-configuration LocationConstraint=eu-central-1 || echo "Bucket already exists"
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Navigate to Terraform configuration
        working-directory: terraform/ec2
        run: pwd  # Prints the current directory to ensure we're in the right place

      - name: Create terraform.tfvars file
        working-directory: terraform/ec2
        run: |
          echo 'aws_region       = "${{ secrets.AWS_REGION }}"' > terraform.tfvars

      - name: Terraform Init with remote state
        working-directory: terraform/ec2
        run: |
          terraform init -backend-config="bucket=terraform-remote-state-ec2-test" \
            -backend-config="key=ec2/terraform.tfstate" \
            -backend-config="region=eu-central-1" \
            -backend-config="encrypt=true"

      - name: Terraform Plan
        working-directory: terraform/ec2
        run: terraform plan

      - name: Terraform Apply
        working-directory: terraform/ec2
        run: terraform apply -auto-approve

      # Handle cleanup if Terraform apply fails
      - name: Terraform Destroy on Failure
        if: failure()
        working-directory: terraform/ec2
        run: terraform destroy -auto-approve

