name: EKS Teardown with Remote State in S3

on:
  workflow_dispatch:  # Manual trigger

jobs:
  destroy:
    runs-on: self-hosted

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Setup Node.js (Install Node.js)
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Create terraform.tfvars file
        working-directory: terraform/eks-managed-node-group
        run: |
          echo 'aws_region       = "${{ secrets.AWS_REGION }}"' > terraform.tfvars
          echo 'cluster_name     = "${{ secrets.CLUSTER_NAME }}"' >> terraform.tfvars
          echo 'cluster_version  = "${{ secrets.CLUSTER_VERSION }}"' >> terraform.tfvars
          echo 'vpc_id           = "${{ secrets.VPC_ID }}"' >> terraform.tfvars
          echo 'subnet_ids       = ["${{ secrets.SUBNET_IDS }}"]' | sed 's/,/", "/g' >> terraform.tfvars
          echo 'lb_subnet_ids    = ["${{ secrets.LB_SUBNET_IDS }}"]' | sed 's/,/", "/g' >> terraform.tfvars
          echo 'instance_types   = ["${{ secrets.INSTANCE_TYPES }}"]' | sed 's/,/", "/g' >> terraform.tfvars
          echo 'lb_internal      = "${{ secrets.LB_INTERNAL }}"' >> terraform.tfvars

      - name: Terraform Init with remote state
        working-directory: terraform/eks-managed-node-group
        run: |
          terraform init -backend-config="bucket=terraform-remote-state-eks-test" \
            -backend-config="key=eks/terraform.tfstate" \
            -backend-config="region=${{ secrets.AWS_REGION }}" \
            -backend-config="encrypt=true"

      - name: Terraform Destroy
        working-directory: terraform/eks-managed-node-group
        run: terraform destroy -auto-approve

      - name: Delete IAM Service Account
        run: |
          eksctl delete iamserviceaccount \
            --cluster ${{ secrets.CLUSTER_NAME }} \
            --namespace kube-system \
            --name aws-load-balancer-controller \
            --wait
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Delete S3 bucket for remote state
        run: |
          aws s3 rb s3://terraform-remote-state-eks-test --force
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
